import { useState, useEffect } from "react";
import "./App.css";

export default function App() {
  const [darkMode, setDarkMode] = useState(false);
  const [name, setName] = useState("");
  const [timeLeft, setTimeLeft] = useState(null);
  const [isTimerRunning, setIsTimerRunning] = useState(false);
  const [motivation, setMotivation] = useState("");

  const messages = [
    "–¢—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è!",
    "–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º —á—É—Ç—å-—á—É—Ç—å!",
    "–ù–µ —Å–¥–∞–≤–∞–π—Å—è",
    "–î–µ—Ä–∂–∏—Å—å, –ø–æ—á—Ç–∏ –∫–æ–Ω–µ—Ü!",
    "–ú–æ–ª–æ–¥–µ—Ü, —Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!"
  ];

  useEffect(() => {
    let interval = null;

    if (isTimerRunning && timeLeft > 0) {
      interval = setInterval(() => {
        setTimeLeft((prev) => prev - 1);
      }, 1000);
    } else if (timeLeft === 0) {
      clearInterval(interval);
      setIsTimerRunning(false);
    }

    return () => clearInterval(interval);
  }, [isTimerRunning, timeLeft]);

  const startTimer = () => {
    if (!name) return alert("–í–≤–µ–¥–∏—Ç–µ –∏–º—è");

    const randomMsg = messages[Math.floor(Math.random() * messages.length)];
    setMotivation(randomMsg);
    setTimeLeft(10);
    setIsTimerRunning(true);
  };

  const resetAll = () => {
    setName("");
    setTimeLeft(null);
    setIsTimerRunning(false);
    setMotivation("");
  };

  return (
    <div className={darkMode ? "App dark" : "App light"}>
      <button onClick={() => setDarkMode(!darkMode)}>
        {darkMode ? "‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞" : "üåô –¢—ë–º–Ω–∞—è —Ç–µ–º–∞"}
      </button>

      <input
        type="text"
        placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è"
        value={name}
        onChange={(e) => setName(e.target.value)}
        disabled={isTimerRunning}
      />
      <p>–ü—Ä–∏–≤–µ—Ç, {name}!</p>

      <div>
        <button onClick={startTimer} disabled={isTimerRunning}>
          {isTimerRunning ? "‚è≥ –¢–∞–π–º–µ—Ä –∏–¥—ë—Ç..." : "‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç (10 —Å–µ–∫—É–Ω–¥)"}
        </button>
        <button onClick={resetAll}>üîÑ –°–±—Ä–æ—Å</button>
      </div>

      {isTimerRunning && <p className="motivator">{motivation}</p>}

      {timeLeft !== null && (
        <h2>
          {timeLeft > 0
            ? `${name}, –æ—Å—Ç–∞–ª–æ—Å—å ${timeLeft} —Å–µ–∫`
            : `‚è∞ –í—Ä–µ–º—è –≤—ã—à–ª–æ, ${name || "–¥—Ä—É–≥"}!`}
        </h2>
      )}

      {!isTimerRunning && timeLeft === 0 && (
        <button onClick={startTimer}>üîÅ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑</button>
      )}
    </div>
  );
}
